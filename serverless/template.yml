Transform: AWS::Serverless-2016-10-31

Metadata:
  AWS::ServerlessRepo::Application:
    Name: timestream-prometheus-connector
    Description: "This serverless application deploys an AWS Lambda function and an Amazon API Gateway that listens for Prometheus remote write/read requests and stores metrics to Amazon Timestream. This application allows configurations over the resources being created."
    Author: "Amazon Timestream"
    SpdxLicenseId: "Apache-2.0"
    LicenseUrl: "LICENSE"
    ReadmeUrl: "DEVELOPER_README.md"
    HomePageUrl: "https://aws.amazon.com/timestream/"
    SemanticVersion: "1.3.0"

Parameters:
  APIGatewayStageName:
    Type: "String"
    Default: "dev"
    Description: "The default stage name of the API Gateway."
  MemorySize:
    Type: Number
    Default: 512
    MinValue: 128
    MaxValue: 8192
    Description: "The memory size of Lambda function."
  ApiGatewayTimeoutInMillis:
    Type: Number
    MinValue: 2
    Default: 30000
    Description: "The maximum amount of time in milliseconds an API Gateway event will wait before timing out."
  EnableSigV4Auth:
    Type: "String"
    AllowedValues:
      - "true"
      - "false"
    Default: "true"
    Description: "Whether to enable SigV4 authentication with the API Gateway. Defaults to false."
  LambdaTimeoutInSeconds:
    Type: Number
    MinValue: 3
    Default: 30
    Description: "The amount of time in seconds to run the connector on AWS Lambda before timing out."
  ReadThrottlingBurstLimit:
    Type: Number
    Default: 1200
    Description: "The number of burst requests per second that API Gateway permits."
  WriteThrottlingBurstLimit:
    Type: Number
    Default: 1200
    Description: "The number of burst requests per second that API Gateway permits."
  DefaultDatabase:
      Type: "String"
      Default: "PrometheusDatabase"
      Description: "The Prometheus default database name."
  DefaultTable:
      Type: "String"
      Default: "PrometheusMetricsTable"
      Description: "The Prometheus default table name."
  ExecutionPolicyName:
    Type: "String"
    Default: "LambdaExecutionPolicy"
    Description: "The name of the basic execution policy created for AWS Lambda."
  LogLevel:
    Type: "String"
    Default: "info"
    Description: "The output level for logs. Valid values include info, warn, debug, error"

Conditions:
  SigV4AuthEnabled: !Equals [!Ref EnableSigV4Auth, "true"]

Resources:
  IAMLambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                  - "lambda.amazonaws.com"
                  - "apigateway.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: !Ref "ExecutionPolicyName"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  Fn::Sub: "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/PrometheusTimestreamConnector-LambdaFunction-*:*"
              - Effect: "Allow"
                Action:
                  - "timestream:DescribeEndpoints"
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - "timestream:WriteRecords"
                  - "timestream:Select"
                Resource: !Sub "arn:aws:timestream:${AWS::Region}:${AWS::AccountId}:database/${DefaultDatabase}/table/${DefaultTable}"

  LambdaFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      Role: !GetAtt IAMLambdaRole.Arn
      CodeUri: 
        Bucket: !Sub 'timestreamassets-${AWS::Region}'
        Key: "timestream-prometheus-connector/timestream-prometheus-connector-linux-amd64-1.3.0.zip"
      Description: "Prometheus remote storage connector for Amazon Timestream"
      Handler: "bootstrap"
      MemorySize: !Ref MemorySize
      Timeout: !Ref LambdaTimeoutInSeconds
      Runtime: "provided.al2023"
      Environment:
        Variables:
          default_database: !Ref DefaultDatabase
          default_table: !Ref DefaultTable
          region: !Ref AWS::Region
          log_level: !Ref LogLevel
          enable_sigv4_auth: !Ref EnableSigV4Auth

  APIGateway:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Sub "${AWS::StackName}-APIGateway"
      ProtocolType: HTTP

  APIGatewayIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref APIGateway
      IntegrationType: AWS_PROXY
      IntegrationUri: !GetAtt LambdaFunction.Arn
      PayloadFormatVersion: "2.0"
      TimeoutInMillis: !Ref ApiGatewayTimeoutInMillis

  WriteRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref APIGateway
      RouteKey: "POST /write"
      Target: !Sub "integrations/${APIGatewayIntegration}"
      AuthorizationType: !If [SigV4AuthEnabled, AWS_IAM, NONE]

  ReadRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref APIGateway
      RouteKey: "POST /read"
      Target: !Sub "integrations/${APIGatewayIntegration}"
      AuthorizationType: !If [SigV4AuthEnabled, AWS_IAM, NONE]

  InvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref LambdaFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${APIGateway}/*"

  APIGatewayDeployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
      - WriteRoute
      - ReadRoute
    Properties:
      ApiId: !Ref APIGateway

  APIGatewayStage:
    Type: AWS::ApiGatewayV2::Stage
    DependsOn:
      - APIGatewayDeployment
      - WriteRoute
      - ReadRoute
    Properties:
      StageName: !Ref APIGatewayStageName
      ApiId: !Ref APIGateway
      DeploymentId: !Ref APIGatewayDeployment
      RouteSettings:
        "POST /write":
          ThrottlingBurstLimit: !Ref WriteThrottlingBurstLimit
        "POST /read":
          ThrottlingBurstLimit: !Ref ReadThrottlingBurstLimit

Outputs:
  InvokeWriteURL:
    Description: Remote write URL for Prometheus
    Value: !Sub "https://${APIGateway}.execute-api.${AWS::Region}.${AWS::URLSuffix}/${APIGatewayStageName}/write"
  InvokeReadURL:
    Description: Remote read URL for Prometheus
    Value: !Sub "https://${APIGateway}.execute-api.${AWS::Region}.${AWS::URLSuffix}/${APIGatewayStageName}/read"
  DefaultDatabase:
    Description: The Prometheus default database name
    Value:
      !Ref "DefaultDatabase"
  DefaultTable:
    Description: The Prometheus default table name
    Value:
      !Ref "DefaultTable"
