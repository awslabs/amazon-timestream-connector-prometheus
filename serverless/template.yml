Transform: AWS::Serverless-2016-10-31

Metadata:
  AWS::ServerlessRepo::Application:
    Name: timestream-prometheus-connector
    Description: "This serverless application deploys an AWS Lambda function and an Amazon API Gateway that listens for Prometheus remote write/read requests and stores metrics to Amazon Timestream. This application allows configurations over the resources being created."
    Author: "Amazon Timestream"
    SpdxLicenseId: "Apache-2.0"
    LicenseUrl: "LICENSE"
    ReadmeUrl: "DEVELOPER_README.md"
    HomePageUrl: "https://aws.amazon.com/timestream/"
    SemanticVersion: "1.1.0"

Parameters:
  APIGatewayStageName:
    Type: "String"
    Default: "dev"
    Description: "The default stage name of the API Gateway."
  MemorySize:
    Type: Number
    Default: 512
    MinValue: 128
    MaxValue: 8192
    Description: "The memory size of Lambda function."
  TimeoutInMillis:
    Type: Number
    MinValue: 2
    Default: 30000
    Description: "The amount of time in milliseconds to run the connector on AWS Lambda before timing out."
  ReadThrottlingBurstLimit:
    Type: Number
    Default: 1200
    Description: "The number of burst requests per second that API Gateway permits."
  WriteThrottlingBurstLimit:
    Type: Number
    Default: 1200
    Description: "The number of burst requests per second that API Gateway permits."
  PrometheusDatabaseLabel:
    Type: "String"
    Default: "PrometheusDatabaseLabel"
    Description: "The Prometheus label containing the database name."
  PrometheusTableLabel:
    Type: "String"
    Default: "PrometheusTableLabel"
    Description: "The Prometheus label containing the table name."
  DefaultDatabase:
      Type: "String"
      Default: "exampleDatabase"
      Description: "The Prometheus default database name."
  DefaultTable:
      Type: "String"
      Default: "exampleTable"
      Description: "The Prometheus default table name."
  ExecutionPolicyName:
    Type: "String"
    Default: "LambdaExecutionPolicy"
    Description: "The name of the basic execution policy created for AWS Lambda."

Resources:
  IAMLambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                  - "lambda.amazonaws.com"
                  - "apigateway.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: !Ref "ExecutionPolicyName"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  Fn::Sub: "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/PrometheusConnectorLambda:*"

  LambdaFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      Role: !GetAtt "IAMLambdaRole.Arn"
      CodeUri: ./timestream-prometheus-connector-linux-amd64-1.1.0.zip
      Description: "Prometheus remote storage connector for Amazon Timestream"
      Handler: "timestream-prometheus-connector-linux-amd64-1.1.0"
      MemorySize: !Ref "MemorySize"
      Runtime: "go1.x"
      Environment:
        Variables:
          database_label: !Ref "PrometheusDatabaseLabel"
          table_label: !Ref "PrometheusTableLabel"
          default_database: !Ref "DefaultDatabase"
          default_table: !Ref "DefaultTable"
          region: !Ref "AWS::Region"
      Events:
        WriteApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref APIGateway
            Method: POST
            Path: /write
            TimeoutInMillis: !Ref TimeoutInMillis
            RouteSettings:
              ThrottlingBurstLimit: !Ref "WriteThrottlingBurstLimit"

        ReadApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref APIGateway
            Method: POST
            Path: /read
            TimeoutInMillis: !Ref TimeoutInMillis
            RouteSettings:
              ThrottlingBurstLimit: !Ref "ReadThrottlingBurstLimit"

  APIGateway:
    Type: "AWS::Serverless::HttpApi"
    Properties:
      StageName: !Ref "APIGatewayStageName"

Outputs:
  InvokeWriteURL:
    Description: Remote write URL for Prometheus
    Value:
      Fn::Sub: "https://${APIGateway}.execute-api.${AWS::Region}.${AWS::URLSuffix}/${APIGatewayStageName}/write"
  InvokeReadURL:
    Description: Remote read URL for Prometheus
    Value:
      Fn::Sub: "https://${APIGateway}.execute-api.${AWS::Region}.${AWS::URLSuffix}/${APIGatewayStageName}/read"
  PrometheusDatabaseLabel:
    Description: The Prometheus label containing the database name
    Value:
      !Ref "PrometheusDatabaseLabel"
  PrometheusTableLabel:
    Description: The Prometheus label containing the table name
    Value:
      !Ref "PrometheusTableLabel"
  DefaultDatabase:
    Description: The Prometheus default database name
    Value:
      !Ref "DefaultDatabase"
  DefaultTable:
    Description: The Prometheus default table name
    Value:
      !Ref "DefaultTable"
